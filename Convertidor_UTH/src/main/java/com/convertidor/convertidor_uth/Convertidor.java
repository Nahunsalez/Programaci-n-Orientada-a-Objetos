/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.convertidor.convertidor_uth;

import Conversion.Dolar;
import Conversion.Euro;
import Conversion.Lempira;
import Conversion.Moneda;
import java.util.HashSet;
import java.util.Set;

/**
 *
 * @author wlater salez
 */
public class Convertidor extends javax.swing.JFrame {

    /**
     * Creates new form Convertidor
     */
    Euro euro = new Euro();
    Dolar dolar = new Dolar();
    Lempira lempira = new Lempira();
    Moneda moneda;
     double numero=0.00;
    double resultado=0.00;
    
   
  
    
    public Convertidor() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        monedaor = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        monedades = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Numero = new javax.swing.JTextArea();
        convertidor = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Resultado = new javax.swing.JLabel();
        mensaje = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(255, 0, 0));
        setIconImages(null);
        setLocation(new java.awt.Point(0, 0));
        setType(java.awt.Window.Type.UTILITY);

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        jLabel1.setText("Convertidor de monedas UTH");

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel2.setText("Seleccione moneda de origen:");

        monedaor.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        monedaor.setModel(new javax.swing.SpinnerListModel(new String[] {"Ninguna", "Lempira", "Euro", "Dolar"}));

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel3.setText("Seleccione moneda de destino:");

        monedades.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        monedades.setModel(new javax.swing.SpinnerListModel(new String[] {"Ninguna", "Lempira", "Euro", "Dolar"}));

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel4.setText("Cantidad:");

        jScrollPane1.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N

        Numero.setColumns(20);
        Numero.setRows(5);
        jScrollPane1.setViewportView(Numero);

        convertidor.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        convertidor.setText("Convertir");
        convertidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                convertidorMouseClicked(evt);
            }
        });
        convertidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertidorActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Total");

        Resultado.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N
        Resultado.setText("0.00");

        mensaje.setFont(new java.awt.Font("Arial Narrow", 1, 12)); // NOI18N
        mensaje.setText(".");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(convertidor))
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(monedaor, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(monedades, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Resultado)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(monedaor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(monedades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(convertidor, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Resultado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_convertidorMouseClicked
        // TODO add your handling code here:
       
      
    }//GEN-LAST:event_convertidorMouseClicked

    private void convertidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertidorActionPerformed
        // TODO add your handling code here:
         //metodo
              
        numero = Double.parseDouble(this.Numero.getText());
                        
        if(monedaor.getValue()=="Lempira" && monedades.getValue()=="Lempira"){
            //proceso
            resultado=numero*lempira.getlempiras();
           //resultado
            this.Resultado.setText(String.valueOf(resultado));
            this.mensaje.setText(String.valueOf(" "));
        }else{
            if(monedaor.getValue()=="Euro" && monedades.getValue()=="Euro"){
            //proceso
            resultado=numero*euro.geteuro();
            //resultado
            this.Resultado.setText(String.valueOf(resultado));
            this.mensaje.setText(String.valueOf(" "));
            }else{
                if(monedaor.getValue()=="Dolar" && monedades.getValue()=="Dolar"){
                    //proceso
                    resultado=numero*dolar.getdolares();
                    //resultado
                    this.Resultado.setText(String.valueOf(resultado));
                    this.mensaje.setText(String.valueOf(" "));
                }else{
                    if(monedaor.getValue()=="Lempira" && monedades.getValue()=="Euro"){
                        //proceso
                        resultado=numero*lempira.geteuro();
                        //resultado
                        this.Resultado.setText(String.valueOf(resultado));
                        this.mensaje.setText(String.valueOf(" "));
                    }else{
                        if(monedaor.getValue()=="Lempira" && monedades.getValue()=="Dolar"){
                            //proceso
                            resultado=numero*lempira.getdolares();
                            //resultado
                            this.Resultado.setText(String.valueOf(resultado));
                            this.mensaje.setText(String.valueOf(" "));
                        }else{
                            if(monedaor.getValue()=="Dolar" && monedades.getValue()=="Lempira"){
                                //proceso
                                resultado=numero*dolar.getlempiras();
                                //resultado
                                this.Resultado.setText(String.valueOf(resultado));
                                this.mensaje.setText(String.valueOf(" "));
                            }else{
                                if(monedaor.getValue()=="Dolar" && monedades.getValue()=="Euro"){
                                    //proceso
                                    resultado=numero*dolar.geteuro();
                                    //resultado
                                    this.Resultado.setText(String.valueOf(resultado));
                                    this.mensaje.setText(String.valueOf(" "));
                                }else{
                                    if(monedaor.getValue()=="Euro" && monedades.getValue()=="Dolar"){
                                        //proceso
                                        resultado=numero*euro.getdolares();
                                        //resultado
                                        this.Resultado.setText(String.valueOf(resultado));
                                        this.mensaje.setText(String.valueOf(" "));
                                    }else{
                                        if(monedaor.getValue()=="Euro" && monedades.getValue()=="Lempira"){
                                            //proceso
                                            resultado=numero*euro.getlempiras();
                                            //resultado
                                            this.Resultado.setText(String.valueOf(resultado));
                                            this.mensaje.setText(String.valueOf(" "));
                                        }else{
                                            if(monedaor.getValue()=="Ninguna" || monedades.getValue()=="Ninguna"){
                                               this.mensaje.setText(String.valueOf("Debe seleccionar la moneda de origen y la moneda de destino"));
                                            }
                                        }
                                    }
                                }
                             }                             
                        }
                    }
                }
             }
        }       
    }//GEN-LAST:event_convertidorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Convertidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
      
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Convertidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Numero;
    public javax.swing.JLabel Resultado;
    private javax.swing.JButton convertidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel mensaje;
    public javax.swing.JSpinner monedades;
    public javax.swing.JSpinner monedaor;
    // End of variables declaration//GEN-END:variables
}
